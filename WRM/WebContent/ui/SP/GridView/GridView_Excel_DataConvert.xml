<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_programId="GridView_Excel_DataConvert" meta_programName="샘플화면-엑셀 DataConvert" meta_programDesc="본 화면은 GridView의 ExcelDownload 및 upload 시 특정문자열의 치환하는 방법을 제공한다." meta_author="Inswave Systems" meta_date="2021.02.25">
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataMap baseNode="map" id="dma_fileDesc">
					<w2:keyInfo>
						<w2:key id="desc" name="" dataType="text"></w2:key>
						<w2:key id="test" name="" dataType="text"></w2:key>
					</w2:keyInfo>
					<w2:data use="true">
						<desc><![CDATA[
<pre class="textNor" style="">
<div class="etcbox">본 화면은 GridView의 ExcelDownload 및 upload 시 특정문자열의 치환하는 방법을 제공한다.
dataConvert 기능의 설정 방법 및 실행방법을 확인한다.
</div>
<div class="etc_tit">1. dataConvert 설정</div>
  - C:\WS5_SAMPLE\RESOURCE\websquare_home\config\websquare.xml 에 아래 설정을 확인한다.
	(설정 변경 후 반드시 was를 리부팅한다.)
  - &lt;excel&gt;
		&lt;download&gt;
			&lt;dataConvertor value="com.inswave.util.dataConvertDown"/&gt;
		&lt;/download&gt;
		&lt;upload&gt;
			&lt;dataConvertor value="com.inswave.util.dataConvertUp"/&gt;
		&lt;/upload&gt;
	&lt;/excel&gt;
<div class="etc_tit">2. dataConvertor 소스</div>
  - 엑셀 다운로드시 치환 
	: websquare.http.controller.grid.excel.write.ICellDataProvider 이용하여 특정 cell의 값을 치환한다.
  - 엑셀 업로드시 치환 
	: websquare.http.controller.grid.excel.read.ICellDataProvider 이용하여 특정 cell의 값을 치환한다.
<div class="etc_tit">3. 주의사항</div>
  - 위 설정을 적용하면 모든 엑셀 다운로드/업로드시 적용이 되므로, 공통적인 요소를 치환할 경우에만 사용하도록 한다.
</pre>
						]]></desc>
						<test><![CDATA[
<pre class="textNor" style="">						
<div class="etc_tit">1. 과정</div>
1. 조회된 데이터를 다운로드 한다.
2. [지우기] 버튼을 클릭 후 [업로드]버튼을 클릭하여 1번에서 내려받은 파일로 화면에 업로드 한다.
<div class="etc_tit">2. 결과</div>
1. 다운로드 받은 엑셀 파일의 내용을 살펴보면 '메뉴명' 컬럼에서 'u00' => 'u00_Convert_' 로 변환됨을 확인한다.
2. 화면에 업로드된 내용 중 '메뉴명' 컬럼에서 'u00_Convert_' => 'u00' 로 변환됨을 확인한다.
</pre>
						]]></test>
					</w2:data>
				</w2:dataMap>
				<w2:dataList id="dlt_update" baseNode="list" saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="UPT_SEQ" name="업데이트순번" dataType="text"></w2:column>
						<w2:column id="UPT_TITLE" name="제목" dataType="text"></w2:column>
						<w2:column id="UPT_DATE" name="작성일" dataType="text"></w2:column>
						<w2:column id="UPT_CONTENT" name="내용" dataType="text"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
			</w2:dataCollection>
			<w2:workflowCollection></w2:workflowCollection>
			<xf:submission id="sbm_advancedExcel" ref="" target='data:json,{"id":"dlt_update","key":"dlt_update"}' action="/page/selectPageList" method="get" mediatype="application/json" encoding="UTF-8"
				instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg="" ev:submit="" ev:submitdone="scwin.sbm_advancedExcel_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
		</xf:model>
		<script type="text/javascript" lazy="false"><![CDATA[
	/**
	 * 초기 스크립트 수행 함수 정의
	 */
	scwin.onpageload = function() {
		scwin.btn_search_onclick();
	};
	
	/** 
	 * /page/selectPageList 서비스에 데이터를 읽어온다.
	 */ 
	scwin.btn_search_onclick = function() {
		$p.executeSubmission(sbm_advancedExcel);
	};
	
	/**
	 * sbm_advancedExcel의 submitdone, 조회된 행의 총 갯수를 count한다.
	 */
	scwin.sbm_advancedExcel_submitdone = function(e) {
		spn_excelBasicCnt.setValue(dlt_update.getRowCount());
	};
	
	/** 
	 * 그리드뷰의 데이터를 엑셀로 다운로드 한다.
	 * 필요한 옵션이 있다면 options, infoArr배열에 옵션을 넣는다.
	 */
	scwin.btn_downloadExcelBasic_onclick = function() {
		var option = { fileName : "data."+rad_excelType.getValue(), autoSizeColumn : true };
		var info = {};
		com.data.downloadGridViewExcel(grd_excelGrid, option, info);
	};
	
	/**	 
	 * 엑셀의 데이터를 그리드뷰로 업로드 한다.
	 * 필요한 옵션이 있다면 options배열에 옵션을 넣는다.
	 */
	scwin.btn_uploadDataBasic_onclick = function() {
		var option = { startRowIndex:1 };
		com.data.uploadGridViewExcel(grd_excelGrid, option);
	};
	
	/**
	 * 엑셀 업로드 후, 건수를 체크한다.
	 */
	scwin.grd_excelGrid_onfilereadend = function(value) {
		spn_excelBasicCnt.setValue(grd_excelGrid.getTotalRow());
	};
	
	/**
	 * 그리드의 데이터가 지워진다.
	 */
	scwin.btn_gridRemoveExcelBasic_onclick = function() {
		dlt_update.removeAll();
	};
	]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<xf:group class="sub_contents" id="" style="">
			<w2:wframe id="" style="" src="../../cm/xml/contentHeader.xml" scope=""></w2:wframe>
			<w2:wframe id="" src="../../cm/xml/contentDesc.xml" scope=""></w2:wframe>
			<xf:group class="dfbox" id="" style="">
				<xf:group class="fr" id="" style="">
					<w2:textbox class="sum" id="spn_excelBasicCnt" label="0" style=""></w2:textbox>
					<w2:textbox class="" id="" label="건" style=""></w2:textbox>
					<w2:textbox class="ett" id="" label="파일형태 :" style=""></w2:textbox>
					<xf:select1 appearance="full" class="mr10" cols="" disabled="" id="rad_excelType" ref="" renderType="radiogroup" rows=""
						selectedIndex="0" style="">
						<xf:choices>
							<xf:item>
								<xf:label><![CDATA[xlsx]]></xf:label>
								<xf:value><![CDATA[xlsx]]>
								</xf:value>
							</xf:item>
							<xf:item>
								<xf:label><![CDATA[xls]]></xf:label>
								<xf:value><![CDATA[xls]]>
								</xf:value>
							</xf:item>
						</xf:choices>
					</xf:select1>

					<xf:trigger class="btn_cm  xls_up" id="btn_uploadDataBasic" style="" type="button" toolTip="엑셀의 데이터를 그리드로 업로드 한다." ev:onclick="scwin.btn_uploadDataBasic_onclick">
						<xf:label><![CDATA[엑셀업로드]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm  xls_down" id="btn_downloadExcelBasic" style="" type="button" toolTip="그리드의 데이터를 엑셀로 다운로드 한다." ev:onclick="scwin.btn_downloadExcelBasic_onclick">
						<xf:label><![CDATA[엑셀다운로드]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm  search" id="btn_search" style="" type="button" ev:onclick="scwin.btn_search_onclick">
						<xf:label><![CDATA[조회]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm" id="btn_gridRemoveExcelBasic" style="" type="button" toolTip="현재 그리드에 업로드 되어있는 데이터를 삭제한다." ev:onclick="scwin.btn_gridRemoveExcelBasic_onclick">
						<xf:label><![CDATA[지우기]]></xf:label>
					</xf:trigger>
				</xf:group>
			</xf:group>
			<xf:group adaptiveThreshold="" class="gvwbox" id="" style="">
				<w2:gridView autoFit="allColumn" class="wq_gvw" dataList="data:dlt_update" ev:onafteredit=""
					ev:onfilereadend="scwin.grd_excelGrid_onfilereadend" ev:onrowindexchange="scwin.grd_Authority_onrowindexchange"
					fixedColumnWithHidden="true" id="grd_excelGrid" ignoreCellClick="false" rowNumHeaderValue="순서" rowNumVisible="true" rowNumWidth="30"
					rowStatusHeaderValue="" rowStatusVisible="" scrollByColumn="false" sortEvent="ondblclick" sortable="true" style="height:400px;"
					useShiftKey="true" visibleRowNum="10">
					<w2:header id="header1" style="">
						<w2:row id="row2" style="">
							<w2:column blockSelect="false" displayMode="label" id="column11" inputType="text" style="height:44px;"
								value="업데이트순번" width="80">
							</w2:column>
							<w2:column blockSelect="false" displayMode="label" id="column9" inputType="text" style="height:25px;" value="제목"
								width="120">
							</w2:column>
							<w2:column blockSelect="false" displayMode="label" id="column7" inputType="text" style="height:25px;"
								value="작성일" width="100">
							</w2:column>
							<w2:column blockSelect="false" displayMode="label" id="column3" inputType="text" style="height:25px;" value="내용"
								width="150">
							</w2:column>
						</w2:row>
					</w2:header>
					<w2:gBody id="gBody4" style="">
						<w2:row id="row5" style="">
							<w2:column blockSelect="false" displayMode="label" id="UPT_SEQ" inputType="text" style="height:38px;"
								width="50">
							</w2:column>
							<w2:column blockSelect="false" displayMode="label" id="UPT_TITLE" inputType="text" style="height:25px;"
								width="40" textAlign="left">
							</w2:column>
							<w2:column blockSelect="false" displayMode="label" id="UPT_DATE" inputType="text" style="height:25px;"
								textAlign="left" width="50">
							</w2:column>
							<w2:column blockSelect="false" falseValue="N" id="UPT_CONTENT" inputType="text" style="height:25px;"
								textAlign="left" trueValue="Y" valueType="other" width="50">
							</w2:column>
						</w2:row>
					</w2:gBody>
				</w2:gridView>

			</xf:group>

		</xf:group>

	</body>
</html>